services:
  # Banco de dados MySQL para autenticação
  auth-db:
    image: mysql:8.0
    container_name: auth-db
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: admin123
      MYSQL_DATABASE: cultivatech
    volumes:
      - db-data:/var/lib/mysql
      - ./Autentication-Users/Back-End/sql/dump.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-padmin123"]
      timeout: 20s
      interval: 10s
      retries: 10
    networks:
      - cultivatech-net

  # Banco de dados MySQL para propriedades
  property-db:
    image: mysql:8.0
    container_name: property-db
    environment:
      MYSQL_ROOT_PASSWORD: admin123
      MYSQL_DATABASE: propertydb
    volumes:
      - property-data:/var/lib/mysql
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-padmin123"]
      interval: 10s
      timeout: 20s
      retries: 10
    networks:
      - cultivatech-net

  # Discovery Server (Eureka)
  discovery-server:
    build:
      context: ./discovery-server
    container_name: discovery-server
    ports:
      - "8761:8761"
    healthcheck:
      test: ["CMD-SHELL", "wget -qO- http://localhost:8761/actuator/health | grep -q UP || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 12
      start_period: 60s
    networks:
      - cultivatech-net

  # Servidor de Configuração
  config-server:
    build:
      context: ./Config-server
    container_name: config-server
    ports:
      - "8889:8889"
    depends_on:
      discovery-server:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8889/config/actuator/health"]
      interval: 10s
      timeout: 5s
      retries: 10
    environment:
      WAIT_FOR: discovery-server:8761
    networks:
      - cultivatech-net

  # API Gateway
  api-gateway:
    build:
      context: ./api-gateway
    container_name: api-gateway
    ports:
      - "8080:8080"
    depends_on:
      discovery-server:
        condition: service_healthy
    networks:
      - cultivatech-net

  # Serviço de Autenticação (Node.js)
  auth-service:
    build:
      context: ./Autentication-Users/Back-End
    container_name: auth-service
    ports:
      - "3000:3000"
    environment:
      DB_HOST: auth-db
      DB_NAME: cultivatech
      DB_USER: root
      DB_PASSWORD: admin123
      JWT_SECRET: "sua_chave_secreta_aqui"
      PORT: 3000
      EUREKA_URL: http://discovery-server:8761/eureka
    depends_on:
      discovery-server:
        condition: service_healthy
      auth-db:
        condition: service_healthy
    networks:
      - cultivatech-net

  # Frontend de Autenticação
  auth-frontend:
    build:
      context: ./Autentication-Users/Front-End
    container_name: auth-frontend
    ports:
      - "5173:5173"
    environment:
      REACT_APP_API_URL: http://localhost:8080
    depends_on:
      api-gateway:
        condition: service_started
    networks:
      - cultivatech-net

  # Serviço de Propriedades
  property-service:
    build: ./property-service
    container_name: property-service
    ports:
      - "8081:8081"
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://property-db:3306/propertydb
      SPRING_DATASOURCE_USERNAME: root
      SPRING_DATASOURCE_PASSWORD: admin123
      SPRING_JPA_PROPERTIES_HIBERNATE_DIALECT: org.hibernate.dialect.MySQL8Dialect
    depends_on:
      property-db:
        condition: service_healthy
      discovery-server:
        condition: service_healthy
    networks:
      - cultivatech-net

networks:
  cultivatech-net:
    driver: bridge

volumes:
  db-data:
  property-data: