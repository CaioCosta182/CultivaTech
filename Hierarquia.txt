


cultivatech/
├──  api-gateway
│   │   └──src/main/br/ifmg/cultivatech/apigateway/ApiGatewayApplicatio.java
│   │   └── resources/application.yml
│   ├── target
│   ├── Dockerfile
│   └── pom.xml
├── tests/                        
│   ├── auth-service-tests.ps1     
│   ├── property-service-tests.ps1 # 
│   └── production-service-tests.ps1 #
├── config-server/                 # Config Server
│   ├── src/main/java/.../ConfigServerApplication.java
│   ├── pom.xml
│   └── ...
├── discovery-server/              # Eureka Server
│   ├── src/main/java/.../DiscoveryServerApplication.java
│   ├── pom.xml
│   └── ...
├── discovery-cli/              # Eureka Server
│   ├── src/main/java/.../DiscoveryCliApplication.java
│   ├── pom.xml
│   └── ...
├── api-gateway/                   # Spring Cloud Gateway
│   ├── src/main/java/.../ApiGatewayApplication.java
│   ├── pom.xml
│   └── ...
├── auth-service/                  #(Microserviço 1: Autenticação e Usuário - agora em Spring Boot)
│   ├── src/main/java/.../auth/
│   │   ├── AuthApplication.java
│   │   ├── config/
│   │   ├── controller/
│   │   ├── model/
│   │   ├── repository/
│   │   ├── security/
│   │   └──service/
├───  production-service/           # Microserviço de Propriedades
│   ├── ... (similar ao auth-service)
│   └── ...
├─── property-service/               # Microserviço de Produção (Cultivos e Animais)
│   ├── src/main/java/br/ifmg/cultivatech/property/
│   ├── controller/PropertyController.java       # Endpoints REST
│   ├── model/Property.java                      # Entidade JPA
│   ├── service/PropertyService.java             # Lógica de negócio
│   ├── repository/PropertyRepository.java       # Camada de dados
│   └── dto/PropertyRequest.java                 # DTOs para APIs
│   └── ...
├── Autentication-Users/          (Microserviço 1: Autenticação e Usuários em javascript)
│   ├── Back-End (Node e javascript)
│   ├── Front-End (React.js)
│       ├── Dockerfile
│       ├── vite.config.js
│       └── .env
│   └── docker-compose.yml             # Docker Compose para todos os serviços
├── pom.xml
└── docker-compose.yml
```


Teste de status
docker ps --filter "name=discovery" --format "table {{.Names}}\t{{.Status}}"